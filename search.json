[{"path":"https://mserrano-ine.github.io/cuadramelo/articles/getting-started.html","id":"balancing-matrices","dir":"Articles","previous_headings":"","what":"Balancing matrices","title":"Getting started","text":"section concerns problem slightly adjusting matrix row column totals add given vectors. balance_matrix() function can help . Remark: order adjustment possible, sum two vectors must . makes sense, must equal sum whole resulting matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/articles/getting-started.html","id":"balancing-a-simple-matrix","dir":"Articles","previous_headings":"Balancing matrices","what":"Balancing a simple matrix","title":"Getting started","text":"Consider example matrix desired row totals column totals, mildly different matrix. Let’s use function solve problem. don’t need provide row column totals. column totals (rows) provided, tallying done match .","code":"example_matrix #>        [,1]   [,2]   [,3]   [,4]   [,5] #> [1,] -0.897 -1.130  0.708 -0.139 -0.393 #> [2,]  0.185 -0.080 -0.240  0.418 -1.040 #> [3,]  1.588  0.132  1.984  0.982  1.782 row_totals #> [1] -1.851  0.243  6.468 col_totals #> [1]  0.87 -1.07  3.45  0.26  1.35 colSums(example_matrix) - col_totals #> [1]  0.006 -0.008 -0.998  1.001 -1.001 rowSums(example_matrix) - row_totals #> [1]  0 -1  0 tallied_matrix <- balance_matrix(example_matrix, col_totals, row_totals) tallied_matrix - example_matrix #>             [,1]   [,2]  [,3]       [,4]  [,5] #> [1,] -0.06866667 -0.064 0.266 -0.4003333 0.267 #> [2,]  0.13133333  0.136 0.466 -0.2003333 0.467 #> [3,] -0.06866667 -0.064 0.266 -0.4003333 0.267 (rowSums(tallied_matrix) - row_totals) |> round(7) #> [1] 0 0 0 (colSums(tallied_matrix) - col_totals) |> round(7) #> [1] 0 0 0 0 0 tallied_matrix <- balance_matrix(example_matrix, col_totals) tallied_matrix - example_matrix #>        [,1]       [,2]      [,3]       [,4]      [,5] #> [1,] -0.002 0.00266667 0.3326667 -0.3336667 0.3336667 #> [2,] -0.002 0.00266667 0.3326667 -0.3336667 0.3336667 #> [3,] -0.002 0.00266667 0.3326667 -0.3336667 0.3336667 (rowSums(tallied_matrix) - row_totals) |> round(7) #> [1]  0.3333333 -0.6666667  0.3333333 (colSums(tallied_matrix) - col_totals) |> round(7) #> [1] 0 0 0 0 0"},{"path":"https://mserrano-ine.github.io/cuadramelo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Serrano. Author, maintainer.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Serrano M (2024). cuadramelo: Matrix balancing rounding. R package version 0.6.0, https://mserrano-ine.github.io/cuadramelo/.","code":"@Manual{,   title = {cuadramelo: Matrix balancing and rounding},   author = {Miguel Serrano},   year = {2024},   note = {R package version 0.6.0},   url = {https://mserrano-ine.github.io/cuadramelo/}, }"},{"path":"https://mserrano-ine.github.io/cuadramelo/index.html","id":"cuádramelo","dir":"","previous_headings":"","what":"Matrix balancing and rounding","title":"Matrix balancing and rounding","text":"Square ! package function balancing rounding matrices subject restrictions. One can adjust matrix columns rows add given vectors, round matrix keeping column row totals, etc.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/apply_by_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify matrix by blocks — apply_by_block","title":"Modify matrix by blocks — apply_by_block","text":"Applies function matrix horizontal vertical blocks.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/apply_by_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify matrix by blocks — apply_by_block","text":"","code":"apply_by_block(Y, layout, L, FUN, ...)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/apply_by_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify matrix by blocks — apply_by_block","text":"Y Matrix layout Blocks distributed: 1 horizontally, 2 vertically. L Number lines block. FUN Funtion apply block. ... Arguments passed FUN.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/apply_by_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify matrix by blocks — apply_by_block","text":"matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_by_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance matrix by blocks — balance_by_blocks","title":"Balance matrix by blocks — balance_by_blocks","text":"Applies balance_matrix() equally-sized blocks partition matrix either vertically horizontally.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_by_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance matrix by blocks — balance_by_blocks","text":"","code":"balance_by_blocks(Y, col_totals = NULL, row_totals = NULL, layout, L)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_by_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance matrix by blocks — balance_by_blocks","text":"Y Matrix balanced. col_totals Desired colSums block. See details. row_totals Desired rowSums block. See details. layout blocks distributed: 1 horizontally, 2 vertically. L Number lines block encompasses.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_by_blocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance matrix by blocks — balance_by_blocks","text":"Y composed **vertically** stacked blocks, col_totals must matrix whose rows colSums block, row_totals just (vertical) vector. Y composed blocks arraged **horizontally**, col_totals (horizontal) vector, row_totals matrix whose columns rowSums block.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_by_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance matrix by blocks — balance_by_blocks","text":"","code":"set.seed(10) Y <- (rnorm(32)*10) |> matrix(ncol = 2) |> round(3) v <- aggregate(Y, by = list(rep(1:4, times = rep(4,4))), FUN = sum)[, -1] |>   round() |> as.matrix() X <- balance_by_blocks(Y, v, layout = 2, L = 4) #> Loading required package: CVXR #>  #> Attaching package: ‘CVXR’ #> The following object is masked from ‘package:stats’: #>  #>     power U <- Y[5:8,] |> balance_matrix(v[2,]) X[5:8,] - U #>      [,1] [,2] #> [1,]    0    0 #> [2,]    0    0 #> [3,]    0    0 #> [4,]    0    0"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance matrix — balance_matrix","title":"Balance matrix — balance_matrix","text":"Balances matrix columns /rows add certain vector.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance matrix — balance_matrix","text":"","code":"balance_matrix(Y, col_totals = NULL, row_totals = NULL, allow_negative = TRUE)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance matrix — balance_matrix","text":"Y Matrix balanced. col_totals (optional) Desired sum columns. row_totals (optional) Desired sum rows. allow_negative negative entries balanced matrix allowed?","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance matrix — balance_matrix","text":"balanced matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance matrix — balance_matrix","text":"Balancing done according criteria minimum sum squares. neither col_totals row_totals given, matrix returned. one given, axis balanced.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/balance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance matrix — balance_matrix","text":"","code":"set.seed(2) Y <- rnorm(3*5) |> matrix(3,5) |> round(3) v <- c( 0.876, -1.078, 3.452, 0.261, 1.349) h <- c(-1.851, 0.243, 6.468) X1 <- balance_matrix(Y, v, h) Y #>        [,1]   [,2]   [,3]   [,4]   [,5] #> [1,] -0.897 -1.130  0.708 -0.139 -0.393 #> [2,]  0.185 -0.080 -0.240  0.418 -1.040 #> [3,]  1.588  0.132  1.984  0.982  1.782 X1 #>            [,1]        [,2]      [,3]   [,4]       [,5] #> [1,] -0.9636667 -1.19666667 0.9746667 -0.539 -0.1263333 #> [2,]  0.3183333  0.05333333 0.2266667  0.218 -0.5733333 #> [3,]  1.5213333  0.06533333 2.2506667  0.582  2.0486667 h #> [1] -1.851  0.243  6.468 rowSums(X1) #> [1] -1.851  0.243  6.468 v #> [1]  0.876 -1.078  3.452  0.261  1.349 colSums(X1) #> [1]  0.876 -1.078  3.452  0.261  1.349 X3 <- balance_matrix(Y, col_totals = v) v #> [1]  0.876 -1.078  3.452  0.261  1.349 colSums(X3) #> [1]  0.876 -1.078  3.452  0.261  1.349 X4 <- balance_matrix(Y, row_totals = h) h #> [1] -1.851  0.243  6.468 rowSums(X4) #> [1] -1.851  0.243  6.468"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/make_non_negative.html","id":null,"dir":"Reference","previous_headings":"","what":"Make non-negative — make_non_negative","title":"Make non-negative — make_non_negative","text":"Modifies little possible entries matrix order make non-negative, keeping row column totals unchanged.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/make_non_negative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make non-negative — make_non_negative","text":"","code":"make_non_negative(Y, allowSlack = FALSE)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/make_non_negative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make non-negative — make_non_negative","text":"Y Matrix positivized. allowSlack Can colSums rowSums modified?","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/make_non_negative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make non-negative — make_non_negative","text":"non-negative matrix, except impossible balance matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/make_non_negative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make non-negative — make_non_negative","text":"","code":"Y <- c(1,2,-1,1,        2,2,3,1,        1,1,-2,3) |>        matrix(nrow = 3) X <- make_non_negative(Y) Y #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    3    1 #> [2,]    2    2    1   -2 #> [3,]   -1    2    1    3 X |> round(2) #>      [,1] [,2] [,3] [,4] #> [1,] 0.97 1.43 3.43 0.17 #> [2,] 1.03 1.49 0.49 0.00 #> [3,] 0.00 2.09 1.09 1.83 rowSums(Y) #> [1] 6 3 5 rowSums(X) #> [1] 6 3 5 colSums(Y) #> [1] 2 5 5 2 colSums(X) #> [1] 2 5 5 2 set.seed(2) Y <- rnorm(3*5) |> matrix(3,5) |> round(3) make_non_negative(Y) #> Error in make_non_negative(Y): Optimal solution not found. Solution status: infeasible make_non_negative(Y, allowSlack = T) |> round() #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    0    0    0    0    0 #> [3,]    1    0    2    1    1"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_by_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Round matrix by blocks — round_by_blocks","title":"Round matrix by blocks — round_by_blocks","text":"Applies round_matrix() equally-sized blocks partition matrix either vertically horizontally.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_by_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round matrix by blocks — round_by_blocks","text":"","code":"round_by_blocks(Y, layout, L, digits = 0, MARGIN_BLOCK = 0)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_by_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round matrix by blocks — round_by_blocks","text":"Y Matrix. layout blocks distributed: 1 horizontally, 2 vertically. L Number lines block encompasses. digits Number decimal places rounded . MARGIN_BLOCK block 0 Preserves rounded colSums rowSums. 1 Preserves rounded rowSums independently . 2 Preserves rounded colSums independently .","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_by_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round matrix by blocks — round_by_blocks","text":"","code":"set.seed(10) Y <- (rnorm(32)*10) |> matrix(ncol = 2) |> round(3) X <- round_by_blocks(Y, 2, 4) U <- Y[5:8,] |> round_matrix() X[5:8,] - U #>      [,1] [,2] #> [1,]    0    0 #> [2,]    0    0 #> [3,]    0    0 #> [4,]    0    0"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a matrix — round_matrix","title":"Round a matrix — round_matrix","text":"Returns integer matrix preserves rounded colSums rowSums.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a matrix — round_matrix","text":"","code":"round_matrix(Y, digits = 0, MARGIN = 0)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a matrix — round_matrix","text":"Y matrix. digits Decimal places round . MARGIN One 0 Preserves rounded colSums rowSums. 1 Preserves rounded rowSums independently . 2 Preserves rounded colSums independently .","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a matrix — round_matrix","text":"rounded matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round a matrix — round_matrix","text":"function throw *warning* problem infeasable. able round matrix fashion, following things must equal: athe sum differences row totals  rounded row totals bthe sum differences column totals  rounded row totals","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round a matrix — round_matrix","text":"","code":"set.seed(6) Y <- rnorm(3*5)*10 |> matrix(3,5) |> round(3) X <- round_matrix(Y) Y #>           [,1]       [,2]        [,3]      [,4]      [,5] #> [1,]  2.696060 17.2719552 -13.0920430 -10.48397  6.532067 #> [2,] -6.299854  0.2418764   7.3862193  17.27851 -3.685665 #> [3,]  8.686598  3.6802518   0.4487299 -11.78600 -5.995546 X #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    3   17  -13  -11    7 #> [2,]   -6    0    7   18   -4 #> [3,]    8    4    1  -12   -6 colSums(Y) |> round() #> [1]  5 21 -5 -5 -3 colSums(X) #> [1]  5 21 -5 -5 -3 rowSums(Y) |> round() #> [1]  3 15 -5 rowSums(X) #> [1]  3 15 -5"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a matrix — round_matrix_bivariate","title":"Round a matrix — round_matrix_bivariate","text":"Returns integer matrix preserves rounded colSums rowSums.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a matrix — round_matrix_bivariate","text":"","code":"round_matrix_bivariate(Y, digits = 0)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a matrix — round_matrix_bivariate","text":"Y matrix. digits Decimal places round .","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a matrix — round_matrix_bivariate","text":"rounded matrix.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round a matrix — round_matrix_bivariate","text":"function throw *warning* problem infeasable. able round matrix fashion, following things must equal: athe sum differences row totals  rounded row totals bthe sum differences column totals  rounded row totals","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_matrix_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round a matrix — round_matrix_bivariate","text":"","code":"set.seed(6) Y <- rnorm(3*5)*10 |> matrix(3,5) |> round(3) X <- round_matrix(Y) Y #>           [,1]       [,2]        [,3]      [,4]      [,5] #> [1,]  2.696060 17.2719552 -13.0920430 -10.48397  6.532067 #> [2,] -6.299854  0.2418764   7.3862193  17.27851 -3.685665 #> [3,]  8.686598  3.6802518   0.4487299 -11.78600 -5.995546 X #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    3   17  -13  -11    7 #> [2,]   -6    0    7   18   -4 #> [3,]    8    4    1  -12   -6 colSums(Y) |> round() #> [1]  5 21 -5 -5 -3 colSums(X) #> [1]  5 21 -5 -5 -3 rowSums(Y) |> round() #> [1]  3 15 -5 rowSums(X) #> [1]  3 15 -5 set.seed(2) Y <- rnorm(3*5)*10 |> matrix(3,5) |> round(3) X <- round_matrix(Y) #> Warning: No hay solución exacta Y #>           [,1]        [,2]      [,3]      [,4]       [,5] #> [1,] -8.969145 -11.3037567  7.079547 -1.387870  -3.926954 #> [2,]  1.848492  -0.8025176 -2.396980  4.176508 -10.396690 #> [3,] 15.878453   1.3242028 19.844739  9.817528  17.822290 X #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   -9  -11    7   -2   -4 #> [2,]    2   -1   -2    4  -11 #> [3,]   16    1   20   10   18 colSums(Y) |> round() #> [1]   9 -11  25  13   3 colSums(X) #> [1]   9 -11  25  12   3 rowSums(Y) |> round() #> [1] -19  -8  65 rowSums(X) #> [1] -19  -8  65"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Round univariate — round_vector","title":"Round univariate — round_vector","text":"Rounds vector preserving rounded sum.","code":""},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round univariate — round_vector","text":"","code":"round_vector(x, digits = 0)"},{"path":"https://mserrano-ine.github.io/cuadramelo/reference/round_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round univariate — round_vector","text":"x vector. digits Number decimal places rounded .","code":""}]
